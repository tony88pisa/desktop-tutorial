						Group.UpdateMember(this, false, false);
					UpdatePlayerStatus();
				}
			}
		}

		/// <summary>
		/// Calculates the maximum health for a specific playerlevel and constitution
		/// </summary>
		/// <param name="level">The level of the player</param>
		/// <param name="constitution">The constitution of the player</param>
		/// <returns></returns>
		public virtual int CalculateMaxHealth(int level, int constitution)
		{
			constitution -= 50;
			if (constitution < 0) constitution *= 2;
			
			// hp1 : from level
			// hp2 : from constitution
			// hp3 : from champions level
			// hp4 : from artifacts such Spear of Kings charge
			int hp1 = CharacterClass.BaseHP * level;
			int hp2 = hp1 * constitution / 10000;
			int hp3 = 0;
			if (ChampionLevel >= 1)
				hp3 = ServerProperties.Properties.HPS_PER_CHAMPIONLEVEL * ChampionLevel;
			double hp4 = 20 + hp1 / 50 + hp2 + hp3;
			if (GetModified(eProperty.ExtraHP) > 0)
				hp4 += Math.Round(hp4 * (double)GetModified(eProperty.ExtraHP) / 100);

			return Math.Max(1, (int)hp4);
		}

public override byte HealthPercentGroupWindow
{
get
{
				var necroWithPet = CharacterClass.Equals(GS.CharacterClass.Necromancer) && ControlledBrain != null;
if (necroWithPet) return ControlledBrain.Body.HealthPercent;

return HealthPercent;
}
}

