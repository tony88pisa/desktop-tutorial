					m_canUseSlashLevel = true;
					break;
				}
			}

			// check the account for the Muted flag
			if (Client.Account.IsMuted)
				IsMuted = true;
		}

		/// <summary>
		/// Save the player into the database
		/// </summary>
		public override void SaveIntoDatabase()
		{
			try
			{
				// Ff this player is a GM always check and set the IgnoreStatistics flag
				if (Client.Account.PrivLevel > (uint)ePrivLevel.Player && DBCharacter.IgnoreStatistics == false)
				{
					DBCharacter.IgnoreStatistics = true;
				}

				SaveSkillsToCharacter();
				SaveCraftingSkills();
				DBCharacter.PlayedTime = PlayedTime;  //We have to set the PlayedTime on the character before setting the LastPlayed
				DBCharacter.LastPlayed = DateTime.Now;

				DBCharacter.ActiveWeaponSlot = (byte)((byte)ActiveWeaponSlot | (byte)ActiveQuiverSlot);
				if (m_stuckFlag)
				{
					lock (m_lastUniqueLocations)
					{
						GameLocation loc = m_lastUniqueLocations[m_lastUniqueLocations.Length - 1];
						DBCharacter.Xpos = loc.X;
						DBCharacter.Ypos = loc.Y;
						DBCharacter.Zpos = loc.Z;
						DBCharacter.Region = loc.RegionID;
						DBCharacter.Direction = loc.Heading;
					}
				}
