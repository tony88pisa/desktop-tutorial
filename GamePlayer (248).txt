		/// <param name="message"></param>
		/// <param name="chatType"></param>
		public override void MessageFromControlled(string message, eChatType chatType)
		{
			MessageToSelf(message, chatType);
		}

		/// <summary>
		/// A general message from the area intended for this player.
		/// </summary>
		/// <param name="source"></param>
		/// <param name="message"></param>
		/// <param name="chatType"></param>
		/// <param name="chatLocation"></param>
		public virtual void MessageFromArea(GameObject source, string message, eChatType chatType, eChatLoc chatLocation)
		{
			Out.SendMessage(message, chatType, chatLocation);
		}

		#endregion

		#region Steed

		/// <summary>
		/// Holds the GameLiving that is the steed of this player as weakreference
		/// </summary>
		protected WeakReference m_steed;
		/// <summary>
		/// Holds the Steed of this player
		/// </summary>
		public GameNPC Steed
		{
			get { return m_steed.Target as GameNPC; }
			set { m_steed.Target = value; }
		}

		/// <summary>
		/// Delegate callback to be called when the player
		/// tries to mount a steed
		/// </summary>
		public delegate bool MountSteedHandler(GamePlayer rider, GameNPC steed, bool forced);

		/// <summary>
		/// Event will be fired whenever the player tries to
		/// mount a steed
		/// </summary>
		public event MountSteedHandler OnMountSteed;
		/// <summary>
