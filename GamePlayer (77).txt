			}

			return false;
		}

		public virtual bool RespecDOL()
		{
			if(RespecAllLines()) // Wipe skills and styles.
			{
				RespecAmountDOL--; // Decriment players respecs available.
				return true;
			}

			return false;
		}

		public virtual int RespecSingle(Specialization specLine)
		{
			int specPoints = RespecSingleLine(specLine); // Wipe skills and styles.
			if (!ServerProperties.Properties.FREE_RESPEC)
				RespecAmountSingleSkill--; // Decriment players respecs available.
			if (Level == 20 || Level == 40)
			{
				IsLevelRespecUsed = true;
			}
			return specPoints;
		}

		public virtual bool RespecRealm()
		{
			bool any = m_realmAbilities.Count > 0;
			
			foreach (Ability ab in m_realmAbilities)
				RemoveAbility(ab.KeyName);
			
			m_realmAbilities.Clear();
			if (!ServerProperties.Properties.FREE_RESPEC)
				RespecAmountRealmSkill--;
			return any;
		}

		protected virtual bool RespecAllLines()
		{
			bool ok = false;
			IList<Specialization> specList = GetSpecList().Where(e => e.Trainable).ToList();
			foreach (Specialization cspec in specList)
			{
				if (cspec.Level < 2)
					continue;
