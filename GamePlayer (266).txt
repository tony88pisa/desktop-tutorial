		/// Gets or sets the realm of this player
		/// </summary>
		public override eRealm Realm
		{
			get { return DBCharacter != null ? (eRealm)DBCharacter.Realm : base.Realm; }
			set
			{
				base.Realm = value;
				if (DBCharacter != null) DBCharacter.Realm = (byte)value;
			}
		}

		/// <summary>
		/// Gets or sets the heading of this player
		/// </summary>
		public override ushort Heading
		{
			set
			{
				base.Heading = value;
				if (DBCharacter != null) DBCharacter.Direction = value;

				if (AttackState && ActiveWeaponSlot != eActiveWeaponSlot.Distance)
				{
					AttackData ad = TempProperties.getProperty<object>(LAST_ATTACK_DATA, null) as AttackData;
					if (ad != null && ad.IsMeleeAttack && (ad.AttackResult == eAttackResult.TargetNotVisible || ad.AttackResult == eAttackResult.OutOfRange))
					{
						//Does the target can be attacked ?
						if (ad.Target != null && IsObjectInFront(ad.Target, 120) && this.IsWithinRadius(ad.Target, AttackRange) && m_attackAction != null)
						{
							m_attackAction.Start(1);
						}
					}
				}
			}
		}

		protected bool m_climbing;
		/// <summary>
		/// Gets/sets the current climbing state
		/// </summary>
		public bool IsClimbing
		{
