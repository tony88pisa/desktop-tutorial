		/// (delegate to property in DBCharacter)
		/// </summary>
		public byte CustomisationStep
		{
			get { return DBCharacter != null ? DBCharacter.CustomisationStep : (byte)0; }
			set { if (DBCharacter != null) DBCharacter.CustomisationStep = value; }
		}
		
		/// <summary>
		/// Gets or sets the IgnoreStatistics for this player
		/// (delegate to property in DBCharacter)
		/// </summary>
		public bool IgnoreStatistics
		{
			get { return DBCharacter != null ? DBCharacter.IgnoreStatistics : false; }
			set { if (DBCharacter != null) DBCharacter.IgnoreStatistics = value; }
		}
		
		/// <summary>
		/// Gets or sets the DeathTime for this player
		/// (delegate to property in DBCharacter)
		/// </summary>
		public long DeathTime
		{
			get { return DBCharacter != null ? DBCharacter.DeathTime : 0; }
			set { if (DBCharacter != null) DBCharacter.DeathTime = value; }
		}
		
		/// <summary>
		/// Gets or sets the ShowXFireInfo for this player
		/// (delegate to property in DBCharacter)
		/// </summary>
		public bool ShowXFireInfo
		{
			get { return DBCharacter != null ? DBCharacter.ShowXFireInfo : false; }
			set { if (DBCharacter != null) DBCharacter.ShowXFireInfo = value; }
		}

		/// <summary>
		/// Gets or sets the BindRegion for this player
		/// (delegate to property in DBCharacter)
		/// </summary>
		public int BindRegion
		{
			get { return DBCharacter != null ? DBCharacter.BindRegion : 0; }
