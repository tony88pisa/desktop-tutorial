			return MLXPLevel[ml];
		}

		/// <summary>
		/// How many steps for each Master Level
		/// </summary>
		private static readonly byte[] MLStepsForLevel =
		{
			10, // ML0 == ML1
			10, // ML1
			11,
			11,
			11,
			11,
			11,
			11,
			11,
			11,
			5, // ML10
		};

		/// <summary>
		/// Get the number of steps required for a ML
		/// </summary>
		/// <param name="ml"></param>
		/// <returns></returns>
		public virtual byte GetStepCountForML(byte ml)
		{
			if (ml > MLStepsForLevel.Length - 1)
				return 0;

			return MLStepsForLevel[ml];
		}

		/// <summary>
		/// True if player has started Master Levels
		/// </summary>
		public virtual bool MLGranted
		{
			get { return DBCharacter != null ? DBCharacter.MLGranted : false; }
			set { if (DBCharacter != null) DBCharacter.MLGranted = value; }
		}

		/// <summary>
		/// What ML line has this character chosen
		/// </summary>
		public virtual byte MLLine
		{
			get { return DBCharacter != null ? DBCharacter.ML : (byte)0; }
			set { if (DBCharacter != null) DBCharacter.ML = value; }
