			foreach (GamePlayer player in GetPlayersInRadius(WorldMgr.INFO_DISTANCE))
			{
				if (player == null) continue;
				if (GameServer.ServerRules.IsAllowedToUnderstand(this, player))
					player.Out.SendMessage(LanguageMgr.GetTranslation(player.Client.Account.Language, "GamePlayer.OnLinkdeath.Linkdead", Name), eChatType.CT_Important, eChatLoc.CL_SystemWindow);
			}

			//Notify other group members of this linkdead
			if (Group != null)
				Group.UpdateMember(this, false, false);

			CheckIfNearEnemyKeepAndAddToRvRLinkDeathListIfNecessary();

			//Notify our event handlers (if any)
			Notify(GamePlayerEvent.Linkdeath, this);
		}

		private void CheckIfNearEnemyKeepAndAddToRvRLinkDeathListIfNecessary()
		{
			AbstractGameKeep keep = GameServer.KeepManager.GetKeepCloseToSpot(this.CurrentRegionID, this, WorldMgr.VISIBILITY_DISTANCE);
			if(keep != null && this.Client.Account.PrivLevel == 1 && GameServer.KeepManager.IsEnemy(keep, this))
			{
				if(WorldMgr.RvRLinkDeadPlayers.ContainsKey(this.m_InternalID))
				{
					WorldMgr.RvRLinkDeadPlayers.Remove(this.m_InternalID);
				}
				WorldMgr.RvRLinkDeadPlayers.Add(this.m_InternalID, DateTime.Now);
			}
		}

		private static List<string> registered_temprop = null;
		/// <summary>
		/// Stop all timers, events and remove player from everywhere (group/guild/chat)
		/// </summary>
		protected virtual void CleanupOnDisconnect()
		{
			StopAttack();
			// remove all stealth handlers
			Stealth(false);
