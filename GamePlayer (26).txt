				
				ResetInCombatTimer();
			}
		}

		/// <summary>
		/// Expire Combat Timer Interval
		/// </summary>
		protected virtual int CombatTimerInterval { get { return 11000; }}
		
		/// <summary>
		/// Combat Timer Lock
		/// </summary>
		private object m_CombatTimerLock = new object();
		
		/// <summary>
		/// Combat Timer
		/// </summary>
		private RegionTimerAction<GamePlayer> m_CombatTimer = null;
		
		/// <summary>
		/// Reset and Restart Combat Timer
		/// </summary>
		protected virtual void ResetInCombatTimer()
		{
			lock (m_CombatTimerLock)
			{
				if (m_CombatTimer == null)
				{
					m_CombatTimer = new RegionTimerAction<GamePlayer>(this, p => p.Out.SendUpdateMaxSpeed());
				}
				m_CombatTimer.Stop();
				m_CombatTimer.Start(CombatTimerInterval);
			}
		}
		#endregion

		#region release/bind/pray
		#region Binding
		/// <summary>
		/// Property that holds tick when the player bind last time
		/// </summary>
		public const string LAST_BIND_TICK = "LastBindTick";
		
		/// <summary>
		/// Min Allowed Interval Between Player Bind
		/// </summary>
		public virtual int BindAllowInterval { get { return 60000; }}
