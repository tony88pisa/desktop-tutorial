								else
									return ((max_autotrain * (max_autotrain + 1) - 2) / 2);
							}
						case 4: // spec is autotrainable
							{
								return 1;
							}
					}
				}
			}
			return 0;
		}
		#endregion

		#region Combat
		/// <summary>
		/// The time someone can hold a ranged attack before tiring
		/// </summary>
		internal const string RANGE_ATTACK_HOLD_START = " RangeAttackHoldStart";
		/// <summary>
		/// Endurance used for normal range attack
		/// </summary>
		public const int RANGE_ATTACK_ENDURANCE = 5;
		/// <summary>
		/// Endurance used for critical shot
		/// </summary>
		public const int CRITICAL_SHOT_ENDURANCE = 10;

		/// <summary>
		/// Holds the cancel style flag
		/// </summary>
		protected bool m_cancelStyle;

		/// <summary>
		/// Gets or Sets the cancel style flag
		/// (delegate to PlayerCharacter)
		/// </summary>
		public virtual bool CancelStyle
		{
			get { return DBCharacter != null ? DBCharacter.CancelStyle : false; }
			set { if (DBCharacter != null) DBCharacter.CancelStyle = value; }
		}
		/// <summary>
		/// Decides which style living will use in this moment
		/// </summary>
		/// <returns>Style to use or null if none</returns>
