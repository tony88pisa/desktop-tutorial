"PlayerPositionUpdateHandler.SafeFall"), eChatType.CT_Damaged, eChatLoc.CL_SystemWindow);

			Endurance -= MaxEndurance * fallDamagePercent / 100;
			double damage = (0.01 * fallDamagePercent * (MaxHealth - 1));

			// [Freya] Nidel: CloudSong falling damage reduction
			GameSpellEffect cloudSongFall = SpellHandler.FindEffectOnTarget(this, "CloudsongFall");
			if (cloudSongFall != null)
				damage -= (damage * cloudSongFall.Spell.Value) * 0.01;

			//Mattress: SafeFall property for Mythirians, the value of the MythicalSafeFall property represents the percent damage taken in a fall.
			if (mythSafeFall != 0 && damage > mythSafeFall)
				damage = ((MaxHealth - 1) * (mythSafeFall * 0.01));

			Out.SendMessage(LanguageMgr.GetTranslation(Client.Account.Language, "PlayerPositionUpdateHandler.FallingDamage"), eChatType.CT_Damaged, eChatLoc.CL_SystemWindow);
			Out.SendMessage(LanguageMgr.GetTranslation(Client.Account.Language, "PlayerPositionUpdateHandler.FallPercent", fallDamagePercent), eChatType.CT_Damaged, eChatLoc.CL_SystemWindow);
			Out.SendMessage("You lose endurance.", eChatType.CT_Damaged, eChatLoc.CL_SystemWindow);
			TakeDamage(null, eDamageType.Falling, (int)damage, 0);

			//Update the player's health to all other players around
			foreach (GamePlayer player in GetPlayersInRadius(WorldMgr.VISIBILITY_DISTANCE))
				Out.SendCombatAnimation(null, Client.Player, 0, 0, 0, 0, 0, HealthPercent);

			return damage;
		}

		#endregion

		#endregion

		#region Class/Race

		/// <summary>
