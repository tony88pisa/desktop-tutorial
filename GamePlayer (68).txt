		/// Gets/sets the player's race name
		/// </summary>
		public virtual string RaceName
		{
			get { return this.RaceToTranslatedName(Race, Gender); }
		}

		/// <summary>
		/// Gets or sets this player's race id
		/// (delegate to DBCharacter)
		/// </summary>
		public override short Race
		{
			get { return (short)(DBCharacter != null ? DBCharacter.Race : 0); }
			set { if (DBCharacter != null) DBCharacter.Race = value; }
		}

		public virtual CharacterClass CharacterClass { get; protected set; }

		public string Salutation => CharacterClass.GetSalutation(Gender);

		[Obsolete("Use SetCharacterClass(CharacterClass) instead.")]
		public virtual bool SetCharacterClass(int id)
		{
			var cl = GS.CharacterClass.GetClass(id);

			return SetCharacterClass(cl);
		}

public bool SetCharacterClass(CharacterClass charClass)
{
if (charClass.Equals(GS.CharacterClass.None))
			{
				if (log.IsErrorEnabled) log.ErrorFormat($"Unknown CharacterClass has been set for Player {Name}.");
				return false;
			}
			if(charClass.Equals(GS.CharacterClass.Bainshee)) new BainsheeMorphEffect(this);

			CharacterClass = charClass;
			DBCharacter.Class = CharacterClass.ID;

			if (Group != null)
			{
				Group.UpdateMember(this, false, true);
