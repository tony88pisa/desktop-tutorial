							continue;

						int occurences = 0;

						//List<string> registered_temprop = new List<string>;

						registered_temprop = Util.SplitCSV(ServerProperties.Properties.TEMPPROPERTIES_TO_REGISTER).ToList();

						occurences = (from j in registered_temprop
									  where p.Contains(j)
									  select j).Count();
						if (occurences == 0)
							continue;

						object v = TempProperties.getProperty<object>(p, null);

						if (v == null)
							continue;

						long longresult = 0;
						if (long.TryParse(v.ToString(), out longresult))
						{
							if (ServerProperties.Properties.ACTIVATE_TEMP_PROPERTIES_MANAGER_CHECKUP_DEBUG)
								log.Debug("On Disconnection found and was saved: " + p + " with value: " + v.ToString() + " for player: " + Name);

							TempPropertiesManager.TempPropContainerList.Add(new TempPropertiesManager.TempPropContainer(DBCharacter.ObjectId, p, v.ToString()));
							TempProperties.removeProperty(p);
						}
						else
						{
							if (ServerProperties.Properties.ACTIVATE_TEMP_PROPERTIES_MANAGER_CHECKUP_DEBUG)
